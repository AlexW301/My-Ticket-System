import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import axios from "axios";
import { useRouter } from "next/router";
import { parseCookies, setCookie, destroyCookie } from "nookies";
import { useState } from "react";

export default function Home({ nameCookie, emailCookie, myTickets }) {
  const router = useRouter();

  const [problem, setProblem] = useState("");
  const [description, setDescription] = useState("");

  const logout = async () => {
    console.log("log out");
    const res = await fetch("/api/auth/logout");
    console.log(res);
    router.reload();
  };

  const submitTicket = async (e) => {
    e.preventDefault()
    const payload = {
      data: {
        Problem: problem,
        Description: description,
      },
    };
    const res = await fetch("/api/tickets/submit", {
      method: "POST",
      headers: {
        Accept: "application/json",
        "Content-Type": "application/json",
      },
      body: JSON.stringify(payload),
    });
    const data = await res.json();
    console.log(data);
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h1>Welcome</h1>
      <p>{nameCookie}</p>
      <p>{emailCookie}</p>
      <form
        onSubmit={submitTicket}
        style={{
          display: "flex",
          flexDirection: "column",
          maxWidth: "400px",
          gap: "10px",
          marginBottom: "10px",
        }}
      >
        <input
          type={"text"}
          placeholder="Problem"
          value={problem}
          onChange={(e) => setProblem(e.target.value)}
        />
        <textarea
          placeholder="Description"
          value={description}
          onChange={(e) => setDescription(e.target.value)}
        />
        <input type={"submit"} />
      </form>
      <h2>My Tickets</h2>
      {myTickets.map((ticket) => (
         <div key={Math.random()} style={{padding: '1rem', backgroundColor: '#f4f4f4', width: '400px', margin: '1rem'}}>
         <p>{ticket.attributes.Problem}</p>
         <p>{ticket.attributes.Description}</p>
       </div>
      ))}
      <button onClick={logout}>Logout</button>
    </div>
  );
}

export async function getServerSideProps(ctx) {
  const cookies = parseCookies(ctx);
  const nameCookie = cookies.name;
  const emailCookie = cookies.email;

  if (!cookies.jwt) {
    return {
      redirect: {
        permanent: false,
        destination: "/login",
      },
    };
  }

  const res = await fetch('http://localhost:1337/api/tickets', {
    method: 'GET',
    headers: {
      Authorization: `Bearer ${cookies.jwt}`
    }
  })

  const data = await res.json()

  return {
    props: {
      nameCookie,
      emailCookie,
      myTickets: data
    },
  };
}

// export async function getServerSideProps({req}) {

//   const res = await fetch('http://localhost:1337/api/users', {
//     method: 'GET',
//     headers: {
//         Authorization: `Bearer ${process.env.STRAPI_API_KEY}`
//     }
//     })

//   const data = await res.json()

//   // const loginInfo = {
//   //     identifier: 'test@gmail.com',
//   //     password: 'password'
//   // }

//   // const login = await fetch('http://localhost:1337/api/auth/local', {
//   //   method: "POST",
//   //   headers: {
//   //     'Accept': 'application/json',
//   //     'Content-Type': 'application/json'
//   //   },
//   //   body: JSON.stringify(loginInfo)
//   // })

//   // const loginResponse = await login.json()

//     const login = await fetch('http://localhost:3000/api/auth/login', {
//       method: 'POST',
//       body: {username: 'test@gmail.com', password: 'password'}
//     })

//   // axios.post('http://localhost:1337/api/auth/local', loginInfo)
//   // .then(response => {
//   //   //Handle Success
//   //   console.log('Well done!');
//   //   console.log(response.data.user);
//   //   console.log(response.data.jwt);
//   // })
//   // .catch(error => {
//   //   //Handle Error
//   //   console.log('An error occured:', error.response)
//   // })

//   return {
//     props: {
//       data,
//       authData: 'loginResponse'
//     }
//   }
// }
